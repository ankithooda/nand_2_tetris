// LOAD CONSTANT
@3030
D=A
// PUSH ON TO STACK
@SP
A=M
M=D
@SP
M=M+1
// POP TO SEGMENT
// POP FROM STACK
@SP
M=M-1
@SP
A=M
D=M
// MOVE REG TO MEM
@3
M=D
// LOAD CONSTANT
@3040
D=A
// PUSH ON TO STACK
@SP
A=M
M=D
@SP
M=M+1
// POP TO SEGMENT
// POP FROM STACK
@SP
M=M-1
@SP
A=M
D=M
// MOVE REG TO MEM
@4
M=D
// LOAD CONSTANT
@32
D=A
// PUSH ON TO STACK
@SP
A=M
M=D
@SP
M=M+1
// POP TO SEGMENT
// POP FROM STACK
@SP
M=M-1
@SP
A=M
D=M
// MOVE REG TO MEM
@5
M=D
// LOAD CONSTANT
@46
D=A
// PUSH ON TO STACK
@SP
A=M
M=D
@SP
M=M+1
// POP TO SEGMENT
// POP FROM STACK
@SP
M=M-1
@SP
A=M
D=M
// MOVE REG TO MEM
@10
M=D
// PUSH FROM SEGMENT
// MOVE MEM TO REG
@3
D=M
// PUSH ON TO STACK
@SP
A=M
M=D
@SP
M=M+1
// PUSH FROM SEGMENT
// MOVE MEM TO REG
@4
D=M
// PUSH ON TO STACK
@SP
A=M
M=D
@SP
M=M+1
// PROCESS COMMAND add
// POP FROM STACK
@SP
M=M-1
@SP
A=M
D=M
// POP FROM STACK
@SP
M=M-1
@SP
A=M
D=M+D
// PUSH ON TO STACK
@SP
A=M
M=D
@SP
M=M+1
// PUSH FROM SEGMENT
// MOVE MEM TO REG
@5
D=M
// PUSH ON TO STACK
@SP
A=M
M=D
@SP
M=M+1
// PROCESS COMMAND sub
// POP FROM STACK
@SP
M=M-1
@SP
A=M
D=M
// POP FROM STACK
@SP
M=M-1
@SP
A=M
D=M-D
// PUSH ON TO STACK
@SP
A=M
M=D
@SP
M=M+1
// PUSH FROM SEGMENT
// MOVE MEM TO REG
@10
D=M
// PUSH ON TO STACK
@SP
A=M
M=D
@SP
M=M+1
// PROCESS COMMAND add
// POP FROM STACK
@SP
M=M-1
@SP
A=M
D=M
// POP FROM STACK
@SP
M=M-1
@SP
A=M
D=M+D
// PUSH ON TO STACK
@SP
A=M
M=D
@SP
M=M+1
