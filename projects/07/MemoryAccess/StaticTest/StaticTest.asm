// LOAD CONSTANT
@111
D=A
// PUSH ON TO STACK
@SP
A=M
M=D
@SP
M=M+1
// LOAD CONSTANT
@333
D=A
// PUSH ON TO STACK
@SP
A=M
M=D
@SP
M=M+1
// LOAD CONSTANT
@888
D=A
// PUSH ON TO STACK
@SP
A=M
M=D
@SP
M=M+1
// POP TO SEGMENT
// POP FROM STACK
@SP
M=M-1
@SP
A=M
D=M
// MOVE REG TO MEM
@24
M=D
// POP TO SEGMENT
// POP FROM STACK
@SP
M=M-1
@SP
A=M
D=M
// MOVE REG TO MEM
@19
M=D
// POP TO SEGMENT
// POP FROM STACK
@SP
M=M-1
@SP
A=M
D=M
// MOVE REG TO MEM
@17
M=D
// PUSH FROM SEGMENT
// MOVE MEM TO REG
@19
D=M
// PUSH ON TO STACK
@SP
A=M
M=D
@SP
M=M+1
// PUSH FROM SEGMENT
// MOVE MEM TO REG
@17
D=M
// PUSH ON TO STACK
@SP
A=M
M=D
@SP
M=M+1
// PROCESS COMMAND sub
// POP FROM STACK
@SP
M=M-1
@SP
A=M
D=M
// POP FROM STACK
@SP
M=M-1
@SP
A=M
D=M-D
// PUSH ON TO STACK
@SP
A=M
M=D
@SP
M=M+1
// PUSH FROM SEGMENT
// MOVE MEM TO REG
@24
D=M
// PUSH ON TO STACK
@SP
A=M
M=D
@SP
M=M+1
// PROCESS COMMAND add
// POP FROM STACK
@SP
M=M-1
@SP
A=M
D=M
// POP FROM STACK
@SP
M=M-1
@SP
A=M
D=M+D
// PUSH ON TO STACK
@SP
A=M
M=D
@SP
M=M+1
